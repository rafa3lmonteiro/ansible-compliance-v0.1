# Playbook to verify Password modules are used with 'required' as the Module Control parameter
# created: Nov/2022
# Rafael Conte Monteiro

---
- name: Password modules are used with 'required' as the Module Control parameter
  hosts: lab
  gather_facts: true
  become: true
  
  tasks:

  - name: Creating a block tasks for Red Hat Linux
    block:

    - name: Reading /etc/pam.d/system-auth file
      shell: grep -i pam_deny.so /etc/pam.d/system-auth | grep -i required | grep -i password
      ignore_errors: true 
      register: system_auth

    - name: Reading /etc/pam.d/password-auth file
      shell: grep -i pam_deny.so /etc/pam.d/password-auth | grep -i required | grep -i password
      ignore_errors: true
      register: password_auth

    - name: Printing system_auth results before the changes 
      debug:
        msg: "{{ system_auth.stdout }}"

    - name: Printing password_auth results before the changes 
      debug:
        msg: "{{ password_auth.stdout }}"

    - name: Creating a backup of system-auth file 
      shell: /bin/cp -p /etc/pam.d/system-auth /etc/pam.d/system-auth_bkp_csd_$(date +%F-%T)
      when: '"required" not in system_auth.stdout' 

    - name: Creating a backup password-auth file
      shell: /bin/cp -p /etc/pam.d/password-auth /etc/pam.d/password-auth_bkp_csd_$(date +%F-%T)
      when: '"required" not in password_auth.stdout'

    - name: Adding the correct pam_deny.so line to the system-auth file
      lineinfile:
        path: /etc/pam.d/system-auth
        line: 'password    required                                 pam_deny.so'
        regexp: '^(password\s+required\s+pam_deny\.so*)'
        insertafter: '^password'
        state: present
      when: '"required" not in system_auth.stdout' 

    - name: Adding the correct pam_deny.so line to the system-auth file
      lineinfile:
        path: /etc/pam.d/password-auth
        line: 'password    required                                 pam_deny.so'
        regexp: '^(password\s+required\s+pam_deny\.so*)'
        insertafter: '^password'
        state: present
      when: '"required" not in password_auth.stdout' 

    - name: Reading again /etc/pam.d/system-auth file
      shell: grep -i pam_deny.so /etc/pam.d/system-auth | grep -i required | grep -i password
      ignore_errors: true 
      register: system_auth_new

    - name: Reading again /etc/pam.d/password-auth file
      shell: grep pam_deny.so /etc/pam.d/password-auth | grep -i required | grep -i password
      ignore_errors: true
      register: password_auth_new

    - name: Printing system_auth_new results after the changes 
      debug:
        msg: "{{ system_auth_new.stdout }}"

    - name: Printing password_auth_new results after the changes 
      debug:
        msg: "{{ password_auth_new.stdout }}"

    when: ansible_facts['distribution'] == 'CentOS'
...